var BAKERY = function() {
  var self = $(this);
  
  var lineOption = function (data, name, is_stack) { //data:数据格式：{name：xxx,group:xxx,value:xxx}...

      var stackline_datas = ECharts.ChartDataFormate.FormateGroupData(data, 'line', is_stack);
      //定制化
      var series = stackline_datas.series;
		  for(var i=0;i<series.length;i++) {
			 if(series[i].name==='总任务数') {
				 series[i].type = 'bar';
				 break;
			 }

		  }

      var option = {

          legend: {

              data: stackline_datas.category

          },
          
          /*dataZoom: {
              show: true,
              realtime : true,
              start : 80
          },*/

          xAxis: [{

              type: 'category', //X轴均为category，Y轴均为value

              data: stackline_datas.xAxis,

              boundaryGap: false//数值轴两端的空白策略

          }],

          yAxis: [{

              name: name || '',

              type: 'value',

              splitArea: { show: true }

          }],

          series: stackline_datas.series

      };

      return $.extend({}, ECharts.ChartOptionTemplates.CommonLineOption, option);

  }
  
  var dailyStatisticData;
  var dailyStatistic = function(){
	  $.ajax({
		  async : false,
		  url : self.contextPath +'/monitor/chart/api/daily-statistic',
		  success : function(data){
			  dailyStatisticData = data;
		  }
	  });
  };
  
  var showDPOverviews = function (){
	  $.getJSON(self.contextPath+'/monitor/chart/api/dp-data', function (data) {  
          if (data.status='success') {
        	  //var nums = data.nums;
        	  //var modules = data.modules;
        	  $("div.details").each(function(index){
                  $(this).children(".number").html(data.data[index].value);
                  $(this).children(".desc").html(data.data[index].name);
              })              
          } else {
              toastr['error'](data.msg, '提示');  
          }  
      });
  };
  
  var showDPErrorJobs = function (queryType){
	  var params = {};
	  if (!queryType) { 
		  params.queryType = 3;
	  }else{
		  params.queryType = queryType;
	  }
	  
	  $("#errorJobs tr:gt(0)").remove();//删除除第一行以为的所有的
	  $.getJSON(self.contextPath+'/monitor/chart/api/dp-error-jobs',params,function (data) {  
		  
          if (data.status='success') {
        	  $(data.errorJobs).each(function(index,item){
        		  var jobName = item.job_name;
                  if (jobName && jobName.length >= 26) {
                	  jobName = jobName.substring(0, 26) + '...';
                  }
        		  $("#errorJobs").append('<tr>'+
                    '<td class="fit">'+
                    '<a target="_blank" href = "' + self.contextPath + '/scheduler/task/detail?schedulerId=' + item.id + '" target="_blank" title="'+ item.job_name+'" class="primary-link">'+jobName+'</a>'+
                    '</td>'+
                    '<td>'+
                    item.user_name+
                    '</td>'+
                    '<td>'+
                    item.run_type+
                    '</td>'+
                    '<td>'+
                    item.exec_time+
                    '</td>'+
                  '</tr>');
              });              
          } else {
              toastr['error'](data.msg, '提示');  
          }  
      });   
  };
  
  var showDPUserJobsRank = function (queryType){
	  var params = {};
	  if (!queryType) { 
		  params.queryType = 2;
	  }else{
		  params.queryType = queryType;
	  }
	  
	  $("#userJobsRank tr:gt(0)").remove();//删除除第一行以为的所有的
	  $.getJSON(self.contextPath+'/monitor/chart/api/dp-user-jobs-rank',params,function (data) {  
		  
          if (data.status='success') {
        	  $(data.value).each(function(index,item){
        		  $("#userJobsRank").append('<tr>'+
                    '<td>'+
                    item.user_name+
                    '</td>'+
                    '<td>'+
                    item.dept_name+
                    '</td>'+
                    '<td>'+
                    item.job_num+
                    '</td>'+
                    '<td>'+
                    '<span class="bold theme-font">'+(index+1)+'</span>'+
                    '</td>'+
                  '</tr>');
              });              
          } else {
              toastr['error'](data.msg, '提示');  
          }  
      });   
  };
  


var showDPUserSummary = function() {
	var items = new Array();
	if (dailyStatisticData.status = 'success') {
		$.each(dailyStatisticData.value,function(i,v){
			if(v.chart == 'DAILY_USER_STATISTIC'){
				delete v.chart;
				items.push(v);
			}
		})
		var option = lineOption(items);
		var container = $("#userSummaryChart")[0];
		opt = ECharts.ChartConfig(container, option);
		ECharts.Charts.RenderChart(opt);
	} else {
		toastr['error'](data.msg, '提示');
	}
};
  
  var showDPRunJobStatus = function (queryType){
	  var params = {};
	  if (!queryType) { 
		  params.queryType = 3;
	  }else{
		  params.queryType = queryType;
	  } 
	  $.getJSON(self.contextPath+'/monitor/chart/api/run-jobs-status',params, function (data) {  
          if (data.status='success') {
              var option = ECharts.ChartOptionTemplates.Pie(data.values);  
              var container = $("#runJobStatusChart")[0];
              opt = ECharts.ChartConfig(container, option);
              ECharts.Charts.RenderChart(opt);
          } else {
              toastr['error'](data.msg, '提示');  
          }  
      });
  };
  
  var initDPTaskTypeRadarOption = function (data){
	  var option = {
	      	    tooltip : {
	      	    	trigger: 'item'
	      	    },
	      	    legend: {
	      	        orient : 'vertical',
	      	        x : 'right',
	      	        y : 'bottom',
	      	        data:['平台分布','我的分布']
	      	    },
	      	    toolbox: {
	      	        show : true,
	      	        feature : {
	      	            //mark : {show: true},
	      	            dataView : {show: true, readOnly: false},
	      	            restore : {show: true},
	      	            saveAsImage : {show: true}
	      	        }
	      	    },
	      	    radar : [
	      	       {
	      	           indicator : data.taskType
	      	        }
	      	    ],
	      	    /*calculable : true,*/
	      	    series : [
	      	        {
	      	            name: '平台  vs 个人',
	      	            type: 'radar',
	      	            data : [
	      	                {
	      	                    value : data.dpTask,
	      	                    name : '平台分布'
	      	                },
	      	                 {
	      	                    value : data.myTask,
	      	                    name : '我的分布'
	      	                }
	      	            ]
	      	        }
	      	    ]
	      	};
	  
	  return option;
  };
  

var showDPTaskTypeRadar = function() {
	$.getJSON(self.contextPath + '/monitor/chart/api/task-type-radar',
			function(data) {
				if (data.status = 'success') {
					var option = initDPTaskTypeRadarOption(data.value);
					var container = $("#jobRadarChart")[0];
					opt = ECharts.ChartConfig(container, option);
					ECharts.Charts.RenderChart(opt);
				} 
			});

};
  
  var initDPTaskTypeBarOption = function (data){
	  var option = {
			    tooltip : {
			        trigger: 'axis'
			    },
			    legend: {
			        data:data.category
			    },
			    toolbox: {
			        show : true,
			        feature : {
			            dataView : {show: true, readOnly: false},
			            magicType: {show: true, type: ['line', 'bar']},
			            restore : {show: true},
			            saveAsImage : {show: true}
			        }
			    },
			    calculable : true,
			    xAxis : [
			        {
			            type : 'value',
			            boundaryGap : [0, 0.01]
			        }
			    ],
			    yAxis : [
			        {
			            type : 'category',
			            data : data.xAxis
			        }
			    ],
			    series : data.series
			};
	  
	  return option;
  };
  
  
var showDPTaskTypeJobsBar = function (){
	  $.getJSON(self.contextPath+'/monitor/chart/api/task-type-jobs', function (data) {  
          if (data.status='success') {
        	  var bars_data = ECharts.ChartDataFormate.FormateGroupData(data.taskType,'bar',true);
        	  var option = initDPTaskTypeBarOption(bars_data);
        	  var container = $("#jobNumsByTypeChart")[0];
              opt = ECharts.ChartConfig(container, option);
              ECharts.Charts.RenderChart(opt);
          } else {
              toastr['error'](data.msg, '提示');  
          }  
      });
	  
  };

/*var showDPGroupJobs = function() {
	$.getJSON(self.contextPath + '/monitor/chart/api/group-jobs', function(
			data) {
		if (data.status = 'success') {
			var option = ECharts.ChartOptionTemplates.Bar(data.groupJobs);
			var container = $("#groupJobsChart")[0];
			opt = ECharts.ChartConfig(container, option);
			ECharts.Charts.RenderChart(opt);
		} else {
			toastr['error'](data.msg, '提示');
		}
	});

};*/

/*var showDPDeptJobs = function() {
	$.getJSON(self.contextPath + '/monitor/chart/api/dept-jobs', function(
			data) {
		if (data.status = 'success') {
			var option = ECharts.ChartOptionTemplates.Bar(data.deptJobs);
			var container = $("#deptJobsChart")[0];
			opt = ECharts.ChartConfig(container, option);
			ECharts.Charts.RenderChart(opt);
		} else {
			toastr['error'](data.msg, '提示');
		}
	});

};*/
  



/*      var showDPRunningJobs = function(days) {
	var params = {};
	if (!days) {
	    params.days = 0;
	} else {
	    params.days = days;
	}

	$.getJSON(self.contextPath + '/monitor/chart/api/dp-runing-jobs',
		params, function(data) {
		    if (data.status = 'success') {
			var option = ECharts.ChartOptionTemplates
				.Lines(data.runningJobsLog);
			var container = $("#runningJobsChart")[0];
			opt = ECharts.ChartConfig(container, option);
			ECharts.Charts.RenderChart(opt);
		    } else {
			toastr['error'](data.msg, '提示');
		    }
		});
    };*/
 

/*  var initDPSchedulerSummaryOption = function (data){
	  option = {
			    tooltip : {
			        trigger: 'axis'
			    },
			    toolbox: {
			        show : true,
			        feature : {
			            dataView : {show: true, readOnly: false},
			            magicType: {show: true, type: ['line', 'bar']},
			            restore : {show: true},
			            saveAsImage : {show: true}
			        }
			    },
			    calculable : true,
			    legend: {
			        data:['任务数','系统调度次数','手动调度次数']
			    },
			    dataZoom: {
	                show: true,
	                realtime : true,
	                start : 80
	            },
			    xAxis : [
			        {
			            type : 'category',
			            data : data.dates
			        }
			    ],
			    yAxis : [
			        {
			            type : 'value',
			            name : '任务数',
			            axisLabel : {
			                formatter: '{value} 个'
			            }
			        }
			    ],
			    series : [

			        {
			            name:'任务数',
			            type:'bar',
			            data:data.jobs
			        },
			        {
			            name:'系统调度次数',
			            type:'line',
			            data:data.autoSchedulerJobs
			        },
			        {
			            name:'手动调度次数',
			            type:'line',
			            data:data.manualSchedulerJobs
			        }
			    ]
			};
	  
	  return option;
  };*/  
  
  var showDPSchedulerSummary = function (){
	  if (dailyStatisticData.status='success') {
		  var items = new Array()
		  $.each(dailyStatisticData.value,function(i,v){
				if(v.chart == 'DAILY_JOB_STATISTIC'){
					delete v.chart;
					items.push(v);
				}
			})
    	  var option = lineOption(items);
    	  var container = $("#schedulerSummaryChart")[0];
          opt = ECharts.ChartConfig(container, option);
          ECharts.Charts.RenderChart(opt);
      } else {
          toastr['error'](data.msg, '提示');  
      }  
  };
  
var handlerActions= function (){
	$(".actions a").click(function(){
		var actionVal = $(this).attr("data-value");
		var array = actionVal.split(":");
		var func = eval(array[0]);
		func(array[1]);
		var fullScreen=($(this).parent()).children(".fullscreen");
		fullScreen.attr("data-value",actionVal);
		/*var echarts1 = echarts.getInstanceByDom(document.getElementById("jobNumsByTypeChart"));
		echarts1.resize();*/
	});
	
	$("input[name='errorJobsRadio']").bind("change",function(){ 
		var actionVal = $(this).attr("data-value");
		var array = actionVal.split(":");
		var func = eval(array[0]);
		func(array[1]);
	}); 
	
	$("input[name='userJobsRank']").bind("change",function(){ 
		var actionVal = $(this).attr("data-value");
		var array = actionVal.split(":");
		var func = eval(array[0]);
		func(array[1]);
	});
	
};
  
  return {
    init: function(opts) {
      self.contextPath = opts.contextPath;
      dailyStatistic();
      showDPOverviews();
      showDPRunJobStatus();
      showDPTaskTypeRadar();
      //showDPRunningJobs();
      //showDPGroupJobs();
      //showDPDeptJobs();
      showDPTaskTypeJobsBar();
      showDPUserSummary();
      showDPErrorJobs();
      showDPUserJobsRank();
      showDPSchedulerSummary()
      handlerActions();
    }
  }
}();