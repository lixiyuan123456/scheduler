var ServerList = function(){
  
  self = $(this);
  var tableInfo = {};
  self.refreshHandler = null;
  
  var initServerTree = function() {
    
    $('#searchServer').keyup(function() {
      $('#serverTree').jstree('search', $(this).val());
    });
    
    //初始化树形列表
    $.ajax({
      url: self.baseUrl + '/list-tree',
      type: 'POST',
      rsync: true,
      success: function(data) {
        $('#serverTree').jstree({'core': {
            'data': data,
          },
          "search":{
            "case_insensitive": true,
            "show_only_matches" : true,
          },
          "plugins" : [ "search" ]
        }).on("select_node.jstree", function (e, data){
          var _ids = data.node.id;
          var ids = _ids.split('_');
          if (ids.length == 1) {
            self.serverName = data.node.text;
            self.serverId = parseInt(ids[0]);
            self.dbId = 0;
            self.tableName = "";
            if (self.serverId == -1) { // -1 表示全部服务器列表
              $('.servers').show();
              $('.databases').hide();
              $('.tables').hide();
              $('.tableDetail').hide();
            } else {
              self.oTable1.ajax.reload();
              $('.servers').hide();
              $('.tables').hide();
              $('.databases').show();
              $('.tableDetail').hide();
            }
          } else if(ids.length == 2) {
            self.serverId = parseInt(ids[0]);
            self.dbId = parseInt(ids[1]);
            self.tableName = "";
            self.oTable2.ajax.reload();
            $('.servers').hide();
            $('.tables').show();
            $('.databases').hide();
            $('.tableDetail').hide();
          }
        }).bind('loaded.jstree', function(e, data) {
          $('#loading').hide();
        });
      },
      error: function() {
        
      }
    });
  }
  
  var initServers = function() {
    var table = $('#dataTable');
    self.oTable = table
        .dataTable({
          "scrollX" : true,
          "ordering" : false,
          "paging" : true,
          "searching" : true,
          "ajax" : {
            url : self.baseUrl + '/list-servers',
            type : 'POST',
            data : function (d) {
            },
            "dataSrc" : "servers",
          },
          "columns" : [
              {
                data : 'id'
              },
              {
                data : null,
                render : function (data, type, full, meta) {
                  if (data.name) {
                    // var name = data.name;
                    // var html = '<a onclick="ServerList.showDatabases('+
                    // data.id +', \'' + data.name + '\')">' + name + '</a>';
                    return data.name;
                  } else {
                    return "";
                  }
                }
              },
              {
                data : null,
                render : function (data, type, full, meta) {
                  var innerHTML = "";
                  var serverType = "";
                  if (data.server_type == 1) {
                    serverType = "MySQL";
                  } else if (data.server_type == 3) {
                    serverType = "WTable";
                  } else {
                    serverType = "Hive";
                  }
                  
                  if (data.logic_type == 1) {
                    innerHTML = serverType + "数据源";
                  } else {
                    innerHTML = serverType + "数据仓库";
                  }
                  return innerHTML;
                }
              },
              {
                data : 'host'
              },
              {
                data : 'port'
              },
              {
                data : 'user_name'
              },
              /* { data: 'database_count' }, */
              {
                data : 'created_by'
              },
              {
                data : 'update_time'
              },
              {
                data : null,
                render : function (data, type, full, meta) {
                  var isEdit = "row-edit";
                  var isDisabled = "";
                  /** 取消权限限制* */
                  /*
                   * if (data.dept_id != self.user.deptId && self.user.role !=
                   * 3) { isEdit = ""; isDisabled = "disabled"; }
                   */
                  var tdInnerHtml = "<a class='row-refresh btn blue'><i class='fa fa-refresh'></i></a>"
                      + "<a class='btn blue "
                      + isEdit
                      + "' "
                      + isDisabled + "><i class='fa fa-edit'></i></a>"
                  return tdInnerHtml;
                }
              }, ],
        });
    //new $.fn.dataTable.FixedHeader( self.oTable );
    table.on('click', ' tbody td .row-edit', function () {
      var nTr = $(this).parents('tr')[0];
      fnFormatDetails(self.oTable, nTr);
    });
    
    table.on('click', ' tbody td .row-refresh', function () {
      var nTr = $(this).parents('tr')[0];
      var aData = self.oTable.fnGetData(nTr);
      
      refreshDatebases(aData.name, aData.id);
    });
    
    function fnFormatDetails(oTable, nTr) {
      var aData = oTable.fnGetData(nTr);
      
      $('.has-error').removeClass('has-error');
      $('.help-block-error').remove();
      
      $('#serverEdit').find('.title').html('编辑');
      $('#serverEdit').modal('show');
      //
      $('#serverEdit').find("[name='server.id']").val(aData.id);
      $('#serverEdit').find("[name='server.createdBy']").val(aData.created_by);
      $('#serverEdit').find("[name='server.dept_id']").val(aData.dept_id);
      self.editServerType = aData.server_type;
      $('#serverEdit').find("[name='server.serverType']").val(aData.server_type);
      $('#serverEdit').find("[name='server.server_logicType']").val(aData.logic_type);
      
      $('#serverEdit').find("[name='server.name']").val(aData.name);
      $('#serverEdit').find("[name='server.host']").val(aData.host);
      $('#serverEdit').find("[name='server.port']").val(aData.port);
      $('#serverEdit').find("[name='server.username']").val(aData.user_name);
      //$('#serverEdit').find("[name='server.password']").val(aData.pass_word);

      var ckBox = $('#serverEdit').find("[name='server.isBinlogSupported']");
      if (aData.isBinlogSupported) {
        ckBox.prop('checked', true);
        ckBox.parent().addClass('checked');
      } else {
        ckBox.prop('checked', false);
        ckBox.parent().removeClass('checked');
      }
      initWTableServer();
    }


  };
  
  var refreshDatebases = function(name, id) {
    
    toastr['success']('[' + name +'] 已进入后台刷新', '提示');
    $.ajax({
      type: "POST",
      url: self.contextPath + "/metadata/server/reload",
      data: {"id":id},
      dataType: 'json',
      success: function(data) {
          if(data.status == 'ok') {
            toastr['success']('[' + name +'] 刷新成功', '提示');
          } else {
            toastr['error']('[' + name +'] 刷新失败，请联系管理员', '错误');
          }
      },
      error: function(data) {
        toastr['error']('[' + name +'] 刷新失败，请联系管理员', '错误');
      }
    });
  }
  
  var initDatabases = function() {
    var table = $('#dataTable1');
    self.oTable1 = table.DataTable({
      "autoWidth": false,
      "bProcessing": true, 
      "language": {
        "emptyTable": "无结果",
        "lengthMenu": "", 
        "search": "查找：",
        "processing": "正在加载...",
        "info": "显示 _START_ 到 _END_ 共 _TOTAL_ 条记录",
      }, 
      "info": true,
      "ordering": false,
      "paging": true, 
      "searching": false,
      "serverSide": false,
      "pageLength": 12,
      "ajax": {
        url: self.contextPath + '/metadata/db/api/list-dbs',
        type: 'POST',
        data: function(d) {
          d.serverId = self.serverId;
        },
        "dataSrc": "databases",
      },
      "columns": [
         { data: 'id'},
         { data: null,
           render: function(data, type, full, meta) {
             var html = '<a onclick="ServerList.showTables('+ data.id +')">' + data.name + '</a>';
             return html;
           } 
         },
         { data: 'tableCount' },
         { data: 'updated' },
         { data: null, 
           render: function(data, type, full, meta) {
             var tdInnerHtml = "--";
             return tdInnerHtml;
           } 
         },
       ],
    });
  }
  
  var initTables = function() {
    var table = $('#dataTable2');
    self.oTable2 = table.DataTable({
      "autoWidth": false,
      "bProcessing": true, 
      "language": {
        "emptyTable": "无结果",
        "lengthMenu": "", 
        "search": "查找：",
        "processing": "正在加载...",
        "info": "显示 _START_ 到 _END_ 共 _TOTAL_ 条记录",
        "infoFiltered": "(共_MAX_条记录)",
        "zeroRecords": "无记录",
        "infoEmpty": "无搜索结果",
      }, 
      "info": true,
      "ordering": false,
      "paging": true, 
      "searching": true,
      "serverSide": false,
      "pageLength": 12,
      "ajax": {
        url: self.contextPath + '/metadata/table/api/search-tables',
        type: 'POST',
        data: function(d) {
          d.tableName = self.tableName;
          d.dbId = self.dbId;
        },
        "dataSrc": "tables",
      },
      "columns": [
         { data: null, 
           render: function(data, type, full, meta) {
             var html = '<a onclick="ServerList.showTableDetail(\''+ data.name +'\')"> <i class="fa fa-search"></i> ' + data.name + '</a>';
             return html;
           }
         },
       ],
    });
  }
  
  var refreshTableDetail = function() {
    
    $('#showTableName').html(self.tableName);
    $('.servers').hide();
    $('.tables').hide();
    $('.databases').hide();
    $('.tableDetail').show();
    var img3 = '<tr>' 
            + '  <td class="dataTables_empty" valign="top" colspan="9">'
            + '    <img src="' + self.contextPath + '/assets/page/img/workshop/throbber.gif"/>'
            + '  </td>'
            + '</tr>';
    $('#dataTable3').find('tbody').html(img3);
    $('#dataTable4').find('tbody').html("");
    
    //$('#dataTable3').find('tbody').find('tr').remove();
    //$('#dataTable4').find('tbody').find('tr').remove();
    
    $.ajax({
      url: self.contextPath + '/metadata/table/api/get_info',
      type: 'GET',
      data: {
        tableName: self.tableName,
        databaseId: self.dbId
      },
      success: function(data) {
        tableInfo = data;
        renderTable(tableInfo);
      }
    });
  }
  
  var gernateTableInfo = function(data) {
    var item3 = ["serverName", "databaseName", "tableName", "columnCount", "rowCount", "dataLength", "status", "updated"];
    var html3 = "<tr>";
    _.each(item3, function(item) {
      if (item == "status") {
        html3 = html3 + "<td id='tdStatus'>" + data[item] + "</td>";
      } else {
        html3 = html3 + "<td>" + data[item] + "</td>";
      }
    });
    html3 = html3 + "<td>" + "<a class='btn btn-xs blue' id='btnProfiling'>开始统计</a>" + "</td>" + "</tr>";
    $('#dataTable3').find('tbody').html(html3);
    
    var item4 = ["columnIndex", "columnName", "columnType", "typeFlagString", "nullCount", "nullPercent"
                 , "distinctValues", "distinctPercent", "max", "avg", "sd", "updated"];
    var html4 = "";
    var columns = data.columnList;
    _.each(columns, function(column) {
      html4 = html4 + "<tr>";
      _.each(item4, function(item) {
        html4 = html4 + "<td>" + column[item] + "</td>";
      });
      var isDisabled = "";
      if (column.hasDetails) {
      } else {
        isDisabled = "disabled='disabled'";
      }
      html4 = html4 + "<td>" + "<a class='btn btn-xs blue' id='columnDetail' details='" + column.columnId + "' " + isDisabled + ">详情</a>" + "</td>" + "</tr>";
    });
    
    $('#dataTable4').find('tbody').html(html4);
  }
  
  var renderTable = function(tableInfo) {
    gernateTableInfo(tableInfo);
    $('#tableDetailRefresh').click(function() {
      if (self.tableName != tableInfo.tableName) {
          return false;
      }
      if (self.refreshHandler != null) {
        clearTimeout(self.refreshHandler);
      }
      self.refreshHandler = null;
      refreshTableDetail(self.tableName);
    });
    
    if (tableInfo.status == 1) { // processing

      $('#divInfo').find('#tdStatus').html(
              '<div class="progress progress-striped" style="width: 60px; float: left; margin-right: 10px; margin-bottom: 0px">'
              + '<div class="progress-bar progress-bar-success font-red" style="width: ' + tableInfo.progress + '%; text-align:center">'
              +  tableInfo.progress + '%'
              + '</div>'
              +'</div>'
              );

      $('#btnProfiling').attr('disabled', 'disabled');

      if (self.refreshHandler == null) {
          self.refreshHandler = setTimeout(function() {
              self.refreshHandler = null;
              refreshTableDetail(tableInfo.tableName);
          }, 3000);
      }
    } else {

      var lblStatus;
      if (tableInfo.status == 2) { // processed
          lblStatus = '<span class="label bg-green">已处理</span>';
      } else if (tableInfo.status == 3) { // error
          lblStatus = '<span class="label bg-red">错误</span>';
      } else { // not profiled
          lblStatus = '<span class="label bg-yellow">未处理</span>';
      }
      $('#divInfo').find('#tdStatus').html(lblStatus);

      if (tableInfo.rowCount == 0 || tableInfo.dataLength > 512 * 1024 * 1024) {
          $('#divInfo').find('#btnProfiling').attr('title', '无数据或容量过大');
          $('#divInfo').find('#btnProfiling').attr('disabled', 'disabled');
      } else {
          $('#divInfo').find('#btnProfiling').click(function() {

              var data = {
                  databaseId: self.dbId,
                  tableName: tableInfo.tableName
              };

              $.post(self.contextPath + '/metadata/table/api/start_profiling', data, function(result) {
                  if (self.tableName != tableInfo.tableName) {
                      return;
                  }
                  if (result.status == 'ok') {
                    refreshTableDetail(tableInfo.tableName);
                  } else {
                	  toastr['error'](result.msg, '提示');
                  }
              }, 'json');
          });
      }
    }
    
    $('#divInfo').find('a[details]').click(function() {
      var data = {
          columnId: $(this).attr('details')
      };
      $.getJSON(self.contextPath + '/metadata/table/api/get_column_details', data, function(columnInfo) {

          if (self.tableName != tableInfo.tableName) {
              return;
          }

          if ($.isEmptyObject(columnInfo)) {
              toastr['error']('获取字段信息失败', '提示');
              return;
          }

          renderColumn(tableInfo, columnInfo);
      });
    });
  }
  
  var renderColumn = function(tableInfo, columnInfo) {
    columnInfo.rowCount = tableInfo.rowCount;
    var typeFlag = parseInt(columnInfo.typeFlag);
    columnInfo.hasNumericStats = (typeFlag & 1) == 1 && !$.isEmptyObject(columnInfo.numericStats);
    columnInfo.hasStringStats = (typeFlag & 2) == 2 && !$.isEmptyObject(columnInfo.stringStats);
    columnInfo.hasDatetimeStats = (typeFlag & 4) == 4 && !$.isEmptyObject(columnInfo.datetimeStats);
    
    var htmlInfo = "<tr>"
                 + "  <td>" + columnInfo.columnType + "</td>"
                 + "  <td>" + columnInfo.rowCount + "</td>"
                 + "  <td>" + columnInfo.generalStats.nullCount + "</td>"
                 + "  <td>" + columnInfo.generalStats.nullPercent + "</td>"
                 + "  <td>" + columnInfo.generalStats.distinctValues + "</td>"
                 + "  <td>" + columnInfo.generalStats.distinctPercent + "</td>"
                 + "  <td>" + columnInfo.typeFlagString + "</td>"
                 + "</tr>";
    $('#basicColInfo').find('tbody').html(htmlInfo);
    if (columnInfo.hasNumericStats) {
      numericStats(tableInfo, columnInfo);
    }
    
    if (columnInfo.hasStringStats) {
      stringStats(tableInfo, columnInfo);
    }
    
    if (columnInfo.hasDatetimeStats) {
      datetimeStats(tableInfo, columnInfo);
    }
    $('#colDtlShow').find('.col').html(columnInfo.columnName);
  }
  var numericStats = function(tableInfo, columnInfo) {
    $("#part1").show();
    $("#part2").hide();
    $("#part3").hide();
    var html = "<td>" + columnInfo.numericStats.min + "</td>"
             + "<td>" + columnInfo.numericStats.max + "</td>"
             + "<td>" + columnInfo.numericStats.avg + "</td>"
             + "<td>" + columnInfo.numericStats.sd + "</td>"
    ;
    $("#part1").find('#valid').html(html);
    generateBottomAndCharts(columnInfo.numericStats.bottom10, 'Numeric', columnInfo.numericStats.top10, columnInfo);
  }
  var stringStats = function(tableInfo, columnInfo) {
    $("#part1").hide();
    $("#part2").show();
    $("#part3").hide();
    var html = "<td>" + columnInfo.stringStats.minLength + "</td>"
             + "<td>" + columnInfo.stringStats.maxLength + "</td>"
             + "<td>" + columnInfo.stringStats.avgLength + "</td>"
    ;
    $("#part2").find('#valid').html(html);
    generateBottomAndCharts(columnInfo.stringStats.bottom10, 'String', columnInfo.stringStats.top10, columnInfo);
  }
  var datetimeStats = function(tableInfo, columnInfo) {
    $("#part1").hide();
    $("#part2").hide();
    $("#part3").show();
    var html1 = "<td colspan='2'>" + columnInfo.datetimeStats.min + "</td>"
             + "<td colspan='2'>" + columnInfo.datetimeStats.max + "</td>"
    ;
    var html2 = "<td>" + columnInfo.datetimeStats.minDate + "</td>"
              + "<td>" + columnInfo.datetimeStats.maxDate + "</td>"
              + "<td>" + columnInfo.datetimeStats.minTime + "</td>"
              + "<td>" + columnInfo.datetimeStats.maxTime + "</td>";
    $("#part3").find('#valid1').html(html1);
    $("#part3").find('#valid2').html(html2);
    generateBottomAndCharts(columnInfo.datetimeStats.bottom10, 'Datetime', columnInfo.datetimeStats.top10, columnInfo);
  }
  
  var generateBottomAndCharts = function(bottom10, id, top10, columnInfo) {
    
    var data = [];
    var sum = 0;
    for (var i = 0; i < top10.length; i += 2) {
      var item = {"amount": top10[i + 1], "type": top10[i]};
      data.push(item);
      sum += top10[i + 1];
    }

    if (columnInfo.rowCount > sum) {
      data.push({
        type: 'Other',
        amount: columnInfo.rowCount - sum,
        color: 'silver'
      });
    }
    var chart = AmCharts.makeChart("div" + id + "Top10", {
      "type": "pie",
      "theme": "light",
      "titles": [{
        "text": "Top10"
       }],
      "dataProvider": data,
      "valueField": "amount",
      "titleField": "type",
      "export": {
        "enabled": true
      }
    });
    chart.invalidateSize();
    
    $('#colDtlShow').modal('show').on('shown.bs.modal', function () {
      chart.invalidateSize();
    });
    
    var arr = [];
    for (var i = 0; i < bottom10.length; i += 2) {
      arr.push('<b>' + bottom10[i] + '</b>: ' + bottom10[i + 1]);
    }
    $('#div' + id + 'Bottom10').html(arr.join(', '));
  }

    $("select#serverType").change(function(){
            initWTableServer();
    })
  
  var serverEdit = function() {
    $('#addServer').on('click', function() {
      $('#serverEdit').find('.title').html('新增');
      $('#serverEdit').modal('show');
      $('#serverEdit').find("[name='server.id']").val("");
      $('#serverEdit').find("[name='server.createdBy']").val(self.user.name);
      $('#serverEdit').find("[name='server.dept_id']").val(self.user.deptId);
      
      $('#serverEdit').find("[name='server.name']").val("");
      $('#serverEdit').find("[name='server.host']").val("");
      $('#serverEdit').find("[name='server.port']").val("");
      $('#serverEdit').find("[name='server.username']").val("");
      $('#serverEdit').find("[name='server.password']").val("");
    });


    $('#serverSave').on('click', function() {
      var sbmFM = $('#serverForm');
      if (sbmFM.valid() == false) {
        return false;
      } else {
        
        var id =  $('#serverEdit').find("[name='server.id']").val();
        var data = {}, error = false;
        
        /*$.each(['dept_id','name', 'host','port', 'username', 'password' ,'createdBy'], function() {*/
        $.each(['name', 'host','port', 'username', 'password' ,'createdBy'], function() {
            var key = 'server.' + this;
            var obj = $('#serverEdit').find("[name='" + key + "']");
            data[key] = obj.val();
            if (this !='port' && !data[key]) {
                toastr['error'](key+'字段不能为空', '提示');
                error = true;
                obj.focus();
                return false;
            }
        });
        if (error) {
            return false;
        }
        if (id != "" && id > 0) {
          data["server.id"] = id;
        }
        data['server.serverType'] = $('#serverEdit').find("[name='server.serverType']").val();
        data['server.logicType'] = $('#serverEdit').find("[name='server.server_logicType']").val();
        if ($('#serverEdit').find("[name='server.isBinlogSupported']").prop('checked')) {
          data['server.isBinlogSupported'] = 1;
        } else {
          data['server.isBinlogSupported'] = 0;
        }
        
        $('#serverEdit').find('.title').html('正在保存，请稍等...');
        $.post(self.contextPath + '/metadata/server/api/add', data, function(result) {
            if (result.status == 'ok') {
              $('#serverEdit').modal('hide');
              //self.oTable.api().ajax.reload();
              //暂时不做任何事
              if (id != "" && id > 0) {
            	  self.oTable.api().ajax.reload();
              } else {
                //initServerTree();
                window.location.reload();
              }
              toastr["success"]('保存成功', '提示');
            } else {
              $('#serverEdit').find('.title').html('<span class="font-red"> 保存失败<br/>' + result.msg + '</span>');
              toastr["error"]('保存失败', '错误');
            }
        }, 'json');
        
      }
    });
  }
  
  var handleValidation = function() {
    var sbmFM = $('#serverForm');
    $.validator.messages.required = '不允许为空';
    sbmFM.validate({
      errorElement: 'span', //default input error message container
      errorClass: 'help-block help-block-error', // default input error message class
      focusInvalid: false, // do not focus the last invalid input
      ignore: "",  // validate all fields including form hidden input
      messages: {
          select_multi: {
              maxlength: jQuery.validator.format("Max {0} items allowed for selection"),
              minlength: jQuery.validator.format("At least {0} items must be selected")
          }
      },
      rules: {
        "editServer.serverType": {
          required: true,
        },
        "editServer.server_logicType": {
          required: true,
        },
        "editServer.name": {
          required: true,
        },
        "editServer.host": {
            required: true,
        },
        /*"editServer.port": {
            required: true,
        },*/
        "editServer.username": {
            required: true,
        },
        "editServer.password": {
          required: true,
        },
      },
      messages: {
        tableComment: "请输入表详情",
      },
      invalidHandler: function (event, validator) { //display error alert on form submit              
      },
      highlight: function (element) { // hightlight error inputs
        $(element).closest('.form-group').addClass('has-error'); // set error class to the control group
      },
      unhighlight: function (element) { // revert the change done by hightlight
        $(element).closest('.form-group').removeClass('has-error'); // set error class to the control group
      },
      success: function (label) {
        label.closest('.form-group').removeClass('has-error'); // set success class to the control group
      },
      submitHandler: function (form) {
        
      }
    });
  }
  
  // 初始化页面隐藏databases和tables板块
  var initProtlet = function() {
    $('.databases').hide();
    $('.tables').hide();
    $('.tableDetail').hide();
  }

  var initWTableServer = function(){
     var text=$("#serverType").val();
     var serverId = $("input[name='server.id']").val();
     if(serverId == '' || serverId == null){

        if(text == '1' || text == '2'){
            $("#binlogDiv").show();
            $("input[name='server.host']").removeAttr("disabled");
            $("input[name='server.port']").removeAttr("disabled");
            $("#serverLogicType").removeAttr("disabled");
            $("input[name='server.host']").val('');
            $("#editUsernameLable").html('用户名 <span class="required" aria-required="true"> * </span>');
            $("#serverHostLabel").html('主机名 <span class="required" aria-required="true"> * </span>');
        }
        if(text == '3'){
            $("input[name='server.host']").val('nameprod.wtable.58dns.org');
            $("input[name='server.host']").attr("disabled","disabled");
            $("input[name='server.port']").attr("disabled","disabled");
            $("#serverLogicType").attr("disabled","disabled");
            $("#editUsernameLable").html('bid <span class="required" aria-required="true"> * </span>');
            $("#serverHostLabel").html('namecenter <span class="required" aria-required="true"> * </span>');
            $("#binlogDiv").hide();
        }
        if(text == '4'){
            $("input[name='server.host']").val('nameprod.wlist.58dns.org');
            $("input[name='server.host']").attr("disabled","disabled");
            $("input[name='server.port']").attr("disabled","disabled");
            $("#serverLogicType").attr("disabled","disabled");
            $("#editUsernameLable").html('bid <span class="required" aria-required="true"> * </span>');
            $("#serverHostLabel").html('namecenter <span class="required" aria-required="true"> * </span>');
            $("#binlogDiv").hide();
        }

     } else{

        if((text == '3' || text == '4') && (self.editServerType =='1' || self.editServerType =='2')){
             toastr["warning"]('不支持此类切换', "提示");
            $("#serverType").val(self.editServerType);
            return ;
        }
        if(text == '1' || text == '2'){
            $("#binlogDiv").show();
            $("input[name='server.host']").removeAttr("disabled");
            $("input[name='server.port']").removeAttr("disabled");
            $("#serverLogicType").removeAttr("disabled");
            $("#editUsernameLable").html('用户名 <span class="required" aria-required="true"> * </span>');
            $("#serverHostLabel").html('主机名 <span class="required" aria-required="true"> * </span>');
        }
        if(text == '3'){
            $("input[name='server.host']").val('nameprod.wtable.58dns.org');
            $("input[name='server.host']").attr("disabled","disabled");
            $("input[name='server.port']").attr("disabled","disabled");
            $("#serverLogicType").attr("disabled","disabled");
            $("#editUsernameLable").html('bid <span class="required" aria-required="true"> * </span>');
            $("#serverHostLabel").html('namecenter <span class="required" aria-required="true"> * </span>');
            $("#binlogDiv").hide();
        }
        if(text == '4'){
            $("input[name='server.host']").val('nameprod.wlist.58dns.org');
            $("input[name='server.host']").attr("disabled","disabled");
            $("input[name='server.port']").attr("disabled","disabled");
            $("#serverLogicType").attr("disabled","disabled");
            $("#editUsernameLable").html('bid <span class="required" aria-required="true"> * </span>');
            $("#serverHostLabel").html('namecenter <span class="required" aria-required="true"> * </span>');
            $("#binlogDiv").hide();
        }

     }



  }
  return {
    
    init: function(opt) {
      self.contextPath = opt.contextPath;
      self.baseUrl = opt.contextPath + '/metadata/server/api';
      self.user = opt.user;
      self.serverId = 0;
      self.dbId = 0;
      self.tableName = "";
      initProtlet();
      initServerTree();
      initServers();
      initDatabases();
      initTables();
      serverEdit();
      handleValidation();
      
      $('#databaseRefresh').click(function() {
        refreshDatebases(self.serverName, self.serverId);
        self.oTable1.ajax.reload();
      });
    },
    showDatabases: function(serverId, serverName) {
      self.serverName = serverName;
      self.serverId = serverId;
      self.dbId = 0;
      self.tableName = "";
      $('#serverTree').jstree("open_node", serverId);
      $('#serverTree').jstree("deselect_all");
      $('#serverTree').jstree(true).select_node(serverId);
    },
    showTables: function(dbId) {
      self.dbId = dbId;
      self.tableName = "";
      var key = self.serverId + "_" + dbId;
      $('#serverTree').jstree("deselect_all");
      $('#serverTree').jstree(true).select_node(key);
    },
    showTableDetail: function(tableName) {
      self.tableName = tableName;
      refreshTableDetail();
    },
    backReferer: function() {
      $('.servers').hide();
      $('.tables').show();
      $('.databases').hide();
      $('.tableDetail').hide();
    },
    backDatabase: function() {
	    $('.servers').hide();
	    $('.tables').hide();
	    $('.databases').show();
	    $('.tableDetail').hide();
	},
    backServer: function() {
	    $('.servers').show();
	    $('.tables').hide();
	    $('.databases').hide();
	    $('.tableDetail').hide();
	}
  }
}();

